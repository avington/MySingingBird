@model MySingingBird.Core.ViewModel.TwitterSearchViewModel
@{
    ViewBag.Title = "Index";
}
<h2>
    Index</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div id="search_main_content">
    <div class="map">
    </div>
    
        @using (Html.BeginForm("Go","Search"))
        {
            <div id="search_form">
            @Html.ValidationSummary(true)
            <fieldset>
                <legend>TwitterSearchViewModel</legend>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Q)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Q)
                    @Html.ValidationMessageFor(model => model.Q)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Longitude)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Longitude)
                    @Html.ValidationMessageFor(model => model.Longitude)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Latitude)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Latitude)
                    @Html.ValidationMessageFor(model => model.Latitude)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RadiusMiles)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.RadiusMiles)
                    @Html.ValidationMessageFor(model => model.RadiusMiles)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.ResultType)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.ResultType)
                    @Html.ValidationMessageFor(model => model.ResultType)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Rpp)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Rpp)
                    @Html.ValidationMessageFor(model => model.Rpp)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.ShowUser)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.ShowUser)
                    @Html.ValidationMessageFor(model => model.ShowUser)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Until)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Until)
                    @Html.ValidationMessageFor(model => model.Until)
                </div>
                <p>
                    <input type="submit" value="Create" />
                </p>
            </fieldset>
            </div>
        }
    </div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
